#!/usr/bin/env perl
#------------------------------------------------------------------------------
# extract system call numbers out of /usr/include/sys/syscall.h
#------------------------------------------------------------------------------

use strict;
use warnings;

my $infile = "/usr/include/sys/syscall.h";
my $release = `/usr/bin/uname -rs`; chomp $release;
my $date = `/usr/bin/date +'%Y/%m/%d'`; chomp $date;

my $indent = " " x 6;
my $short_indent = " " x 3;

open(my $in, "<", $infile) or die "Unable to open $infile for reading: $!\n";
my @syscalls = ();
my $maxlength = 0;
my $maxval = 0;
while(<$in>) {
   next unless m{
	 ^\#define
	 \s+
	 SYS_([a-z_0-9]+)
	 \s+
	 ([0-9]+)
      }x;
   my ($orig_name, $val) = ($1, $2);
   my $name = $orig_name;
   $name =~ s/^_// if $name =~ /^_/;
   $name =~ s/_$//;
   $name =~ s/_(.)/\u$1/g;
   my $syscall = {'name' => $name, 'orig_name' => $orig_name, 'val' => $val};
   push(@syscalls, $syscall);
   $maxlength = length $name if $maxlength < length $name;
   $maxval = $val if $maxval < $val;
   # printf "%-20s %d\n", $orig_name, $val;
}

$| = 1;
print "${short_indent}(* following constants have been extracted from\n";
print "${short_indent}      $infile\n";
print "${short_indent}   on $release on $date\n";
print "${short_indent}*)\n\n";
print "${short_indent}CONST\n";

# open(my $pr, "| pr -t -w 70 -l 1000 -2 | sed 's/^/$indent/; s/  *\$//'") or
open(my $pr, "| pr -t -w 70 -l 1000 -2 | expand | sed 's/^/$indent/; s/  *\$//'") or
   die "Unable to invoke pipe to pr: $!\n";
foreach my $syscall (@syscalls) {
   printf $pr "%-${maxlength}s = %3d;\n",
      $syscall->{'name'}, $syscall->{'val'};
}
close($pr);
